pipeline {
    agent any

    environment {
        PYTHON_ENV = "venv"  // Sanal ortam ismi
        PORT = 5000
        PATH = "/var/jenkins_home/workspace/REAL-ZAP-Scanner/reports/zap-report.json"
    }
    /*
    DEGİSTİRİLECEKLER:
        - Kodun icine bakmaya gerek yok! Ustteki degisken kismindan degistirecekleri degistirmek yeterli olacaktir(ekstra bir sey yoksa!).
    
    */

    stages {
        stage('Check if Port 5000 is Free') {
            steps {
                script {
                    sh 'apt update && apt install lsof -y'
                    // 5000 portunun kullanımda olup olmadığını kontrol et
                    def isPortFree = sh(script: "lsof -i :${PORT}", returnStatus: true)
                    
                    if (isPortFree != 0) {
                        echo "Port ${PORT} is free. Proceeding with Flask app."
                    } else {
                        error "Port ${PORT} is already in use. Pipeline will stop here."
                    }
                }
            }
        }
        
        stage('Install Dependencies') {
            steps {
                script {
                    sh 'apt update && apt install python3 python3.11-venv -y' 
                    
                    sh 'python3 -m venv $PYTHON_ENV'
                    
                    sh '''
                        . $PYTHON_ENV/bin/activate
                        pip install Flask
                    '''
                }
            }
        }

        stage('Run Flask App') {
            steps {
                script {
                    // Flask uygulamanızı başlatma
                    sh '''
                        . $PYTHON_ENV/bin/activate
                        python -c "
from flask import Flask, jsonify
import json

app = Flask(__name__)

# ZAP sonuçları dosyasını okuyun
with open('${PATH}') as f:
    zap_data = json.load(f)

@app.route('/zap-data', methods=['GET'])
def get_zap_data():
    return jsonify(zap_data)

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=${PORT})
                        "
                    '''
                }
            }
        }

        // Diğer aşamalar (testler, temizlik vb.) buraya eklenebilir
    }

    post {
        always {
            echo 'İslem Tamam.'
            cleanWs()
        }
    }
}



